# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: React.js CI

on:
  push:
    branches: ['master']

env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: docker
        run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: docker build
        run: docker build -t phamtuan239/frontend -f dockerfile.dev .
      - name: docker run
        run: docker run -e CI=true phamtuan239/frontend npm run test
      - name: Get timestamp
        id: timestamp
        run: echo "::set-output name=timestamp::$(date +'%s')"
      - name: deploy to EB
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: react-frontend-docker
          environment_name: Reactfrontenddocker-env
          region: ap-southeast-1
          existing_bucket_name: elasticbeanstalk-ap-southeast-1-891869786502
          version_label: ${{steps.timestamp.outputs.timestamp}}
          deployment_package: docker-compose.yml